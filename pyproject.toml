[tool.poetry]
name = "co_op_translator"
version = "0.2.0"
description = "Easily automate multilingual translations for your projects with co-op-translator, powered by advanced LLM technology."
authors = ["Minseok Song <skytin1004@gmail.com>"]
maintainers = [

]
repository = "https://github.com/Imperial-EE-Microsoft/microsoft_translation_public"
license = "MIT"
readme = "README.md"
keywords = ["translator", "translation","azure", "openai", "gpt"]
packages = [{ include = "co_op_translator", from = "src" }]
include = ["src/co_op_translator/fonts/*"]
documentation = "https://techcommunity.microsoft.com/t5/educator-developer-blog/localizing-github-repositories-with-llms/ba-p/4216434"

[tool.poetry.scripts]
translate = "co_op_translator.__main__:main"

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
annotated-types = "^0.7.0"
anyio = "^4.4.0"
appnope = "^0.1.4"
asttokens = "^2.4.1"
azure-ai-vision-imageanalysis = "^1.0.0b2"
azure-cognitiveservices-vision-computervision = "^0.9.0"
azure-common = "^1.1.28"
azure-core = "^1.30.2"
certifi = "^2024.6.2"
charset-normalizer = "^3.3.2"
click = "^8.1.7"
comm = "^0.2.2"
contourpy = "^1.2.1"
cycler = "^0.12.1"
decorator = "^5.1.1"
distro = "^1.9.0"
executing = "^2.0.1"
fonttools = "^4.53.0"
h11 = "^0.14.0"
httpcore = "^1.0.5"
httpx = "^0.27.0"
idna = "^3.7"
isodate = "^0.6.1"
jedi = "^0.19.1"
kiwisolver = "^1.4.5"
matplotlib = "^3.9.0"
matplotlib-inline = "^0.1.7"
msrest = "^0.7.1"
numpy = "^1.25.2"
oauthlib = "^3.2.2"
openai = "^1.33.0"
opencv-python = "^4.10.0.82"
packaging = "^24.1"
parso = "^0.8.4"
pexpect = "^4.9.0"
pillow = "^10.3.0"
platformdirs = "^4.2.2"
prompt_toolkit = "^3.0.47"
psutil = "^5.9.8"
ptyprocess = "^0.7.0"
pure-eval = "^0.2.2"
pydantic = "^2.7.3"
pydantic_core = "^2.18.4"
pyparsing = "^3.1.2"
python-dateutil = "^2.9.0.post0"
python-dotenv = "^1.0.1"
pyyaml = "^6.0.2"
pyzmq = "^26.0.3"
requests = "^2.32.3"
requests-oauthlib = "^2.0.0"
semantic_kernel = "^1.8.3"
six = "^1.16.0"
sniffio = "^1.3.1"
stack-data = "^0.6.3"
tiktoken = "^0.7.0"
tornado = "^6.4.1"
tqdm = "^4.66.4"
traitlets = "^5.14.3"
typing_extensions = "^4.12.2"
urllib3 = "^2.2.1"
wcwidth = "^0.2.13"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
ipykernel = "^6.29.4"
ipython = "^8.25.0"
jupyter_client = "^8.6.2"
jupyter_core = "^5.7.2"
nest-asyncio = "^1.6.0"
debugpy = "^1.8.1"
stack-data = "^0.6.3"
Pygments = "^2.18.0"

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests", "integration"]
console_output_style = "progress"
filterwarnings = ["ignore::DeprecationWarning", "ignore::ResourceWarning"]
log_cli = true
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
markers = ["async_test", "api_key_required"]

[tool.coverage.run]
command_line = """
    -m pytest --ignore=tests/integration
    --cov --cov-report=term --cov-report=html
    --instafail -ra -n auto -m "not api_key_required"
"""
source = ["src/co_op_translator"]
omit = ["tests/*", "*/__init__.py"]

[tool.coverage.report]
sort = "Stmts"
skip_empty = true
show_missing = false
ignore_errors = true


[tool.coverage.html]
directory = "coverage"

[tool.ruff]
exclude = []
line-length = 120

[tool.mypy]
plugins = ["pydantic.mypy"]
follow_imports = "skip"
disable_error_code = ["type-var"]
namespace_packages = true
ignore_missing_imports = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"